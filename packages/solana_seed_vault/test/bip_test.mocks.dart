// Mocks generated by Mockito 5.3.2 from annotations
// in solana_seed_vault/test/bip_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:solana_seed_vault/src/api.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBip44DerivationDto_0 extends _i1.SmartFake
    implements _i2.Bip44DerivationDto {
  _FakeBip44DerivationDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Bip32ApiHost].
///
/// See the documentation for Mockito's code generation for more information.
class MockBip32ApiHost extends _i1.Mock implements _i2.Bip32ApiHost {
  MockBip32ApiHost() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i2.BipLevelDto?>> fromUri(String? arg_uri) =>
      (super.noSuchMethod(
        Invocation.method(
          #fromUri,
          [arg_uri],
        ),
        returnValue:
            _i3.Future<List<_i2.BipLevelDto?>>.value(<_i2.BipLevelDto?>[]),
      ) as _i3.Future<List<_i2.BipLevelDto?>>);
  @override
  _i3.Future<String> toUri(List<_i2.BipLevelDto?>? arg_levels) =>
      (super.noSuchMethod(
        Invocation.method(
          #toUri,
          [arg_levels],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}

/// A class which mocks [Bip44ApiHost].
///
/// See the documentation for Mockito's code generation for more information.
class MockBip44ApiHost extends _i1.Mock implements _i2.Bip44ApiHost {
  MockBip44ApiHost() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.Bip44DerivationDto> fromUri(String? arg_uri) =>
      (super.noSuchMethod(
        Invocation.method(
          #fromUri,
          [arg_uri],
        ),
        returnValue:
            _i3.Future<_i2.Bip44DerivationDto>.value(_FakeBip44DerivationDto_0(
          this,
          Invocation.method(
            #fromUri,
            [arg_uri],
          ),
        )),
      ) as _i3.Future<_i2.Bip44DerivationDto>);
  @override
  _i3.Future<String> toUri(_i2.Bip44DerivationDto? arg_levels) =>
      (super.noSuchMethod(
        Invocation.method(
          #toUri,
          [arg_levels],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}
